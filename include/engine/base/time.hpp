#pragma once
// 和系统time.h冲突　命名为 time.hpp

#include <chrono>
#include <string>


/*************************************** time_elapsed_t ***************************************/
/*---------------------------------------------------------------------------------
time_elapsed_t

---------------------------------------------------------------------------------*/
class time_elapsed_t {
    //-----------------------------------------------------------------------------
    //定义毫秒,秒，级别的时钟类型，选用最高精度 的clock
    using clock_t     = std::chrono::high_resolution_clock;
    using timepoint_t = std::chrono::time_point<clock_t, clock_t::duration>;

private:
    //-----------------------------------------------------------------------------
    timepoint_t m_timePoint;

public:
    //-----------------------------------------------------------------------------
    time_elapsed_t();

public:
    //-----------------------------------------------------------------------------
    void reset();
    //-----------------------------------------------------------------------------
    int64_t hours() const;
    //-----------------------------------------------------------------------------
    int64_t minutes() const;
    //-----------------------------------------------------------------------------
    int64_t seconds() const;
    //-----------------------------------------------------------------------------
    int64_t milli() const;
    //-----------------------------------------------------------------------------
    int64_t micro() const;
    //-----------------------------------------------------------------------------
    int64_t nano() const;
};

/*************************************** xx ***************************************/
/*---------------------------------------------------------------------------------
timestamp
---------------------------------------------------------------------------------*/
int64_t timestamp();
int64_t timems();

/*---------------------------------------------------------------------------------
timeIsFormat
---------------------------------------------------------------------------------*/
bool timeIsFormat(const std::string& theTime);

/*---------------------------------------------------------------------------------
timeSameWeek
---------------------------------------------------------------------------------*/
bool timeSameWeek(int64_t t1, int64_t t2);

/*---------------------------------------------------------------------------------
timeToStamp
---------------------------------------------------------------------------------*/
int64_t timeFormatToStamp(const std::string& theTime);

/*---------------------------------------------------------------------------------
timeToFormat
y:年 m:月 d:日 h:时 m:分 s:秒
---------------------------------------------------------------------------------*/
std::string timeStampToFormat(int64_t theTime, std::string timeformat = "y:m:d h:m:s");
